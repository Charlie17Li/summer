apiVersion: v1
data:
  prometheus.yml: |-
    global:
      scrape_interval:     15s 
      evaluation_interval: 15s
    scrape_configs:

    # - job_name: 'kubernetes-nodes'
    #   # scheme: https      # 也可以写在这里
    #   tls_config:
    #     ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    #     insecure_skip_verify: true
    #   bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    #   kubernetes_sd_configs:
    #   - role: node          # 用于评估节点性能:pod启动时间
    #   relabel_configs:
    #   - action: labelmap    # 这个作用是加一些label方便后续筛选
    #     regex: _meta_kubernetes_node_label_(.+)
    #   - action: replace     # 默认是HTTP,需要替换成HTTPS
    #     source_labels: ["__scheme__"]
    #     replacement: "https"
    #     target_label: "__scheme__"
    #   - target_label: __address__ # 通过走API_SERVER去访问
    #     replacement: kubernetes.default.svc:443
    #   - source_labels: [__meta_kubernetes_node_name] # 修改metrics_path从而找到node
    #     regex: (.+)
    #     target_label: __metrics_path__
    #     replacement: /api/v1/nodes/${1}/proxy/metrics
    - job_name: 'karmada-scheduler'
      kubernetes_sd_configs:
      - role: endpoints
      scheme: http
      tls_config:
        insecure_skip_verify: true
      relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_pod_label_app]
        action: keep
        regex: karmada-system;karmada-scheduler;karmada-scheduler
      # - target_label: __address__       # cluster内部可以通过该域名访问连接到service=>apiserver
      #   replacement: kubernetes.default.svc:443
    
    - job_name: 'kubernetes-apiserver'
      kubernetes_sd_configs:
      - role: endpoints
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: default;kubernetes;https
      - target_label: __address__       # cluster内部可以通过该域名访问连接到service=>apiserver
        replacement: kubernetes.default.svc:443

    - job_name: 'karmada-apiserver'
      kubernetes_sd_configs:
      - role: endpoints
      scheme: https
      tls_config:
        insecure_skip_verify: true
      bearer_token: eyJhbGciOiJSUzI1NiIsImtpZCI6IndPZkJmOHlhT1BWNlcyajIwQmdrLVVINXZxQnhyUkNSQm9zcEQ0SjlRejgifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJkZWZhdWx0Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6InByb21ldGhldXMiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoicHJvbWV0aGV1cyIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjBiZWYxY2QwLThiMGEtNDI5ZS1hNjgwLWI4ODk2M2QxZDhjMyIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDpkZWZhdWx0OnByb21ldGhldXMifQ.bF1Oc9k7F-zv8d6WzUv6mRWhxKKXFTMG9ayO-IN_PiuytGNhqwZ-iz_d8-LghMchgGWX7S7lz0BYm2YS_vkJr2W2pIsCAjCKX0rnLPu8T49yXLtQLLPc31beYm6yDAU447zxVInF6fPEaLZRJOOaF8neH-Qls4gQ55UeL9lYcPpOaJj8LUAAOaR6lBl3YLHb_Dona-45Gfv-HkUTbfsA3vlnBt1GAmglPTA5BnpD_35aWkiHAbnaEfMv0ZcyQtxCp3fjCbHBAuKDb-5JgeZPt4ANmryXgoML-yX1c-1xKSS1DUOewrvh-jCK9W5ac6ENvxAqA4XM2fvlPLKR417Y0A
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_label_app]
        action: keep
        regex: karmada-apiserver
      - target_label: __address__       # cluster内部可以通过该域名访问连接到service=>apiserver
        replacement: karmada-apiserver.karmada-system.svc:5443

    - job_name: 'Karmada-AA'
      kubernetes_sd_configs:
      - role: endpoints
      scheme: https
      tls_config:
        insecure_skip_verify: true
      bearer_token: eyJhbGciOiJSUzI1NiIsImtpZCI6IndPZkJmOHlhT1BWNlcyajIwQmdrLVVINXZxQnhyUkNSQm9zcEQ0SjlRejgifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJkZWZhdWx0Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6InByb21ldGhldXMiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoicHJvbWV0aGV1cyIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjBiZWYxY2QwLThiMGEtNDI5ZS1hNjgwLWI4ODk2M2QxZDhjMyIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDpkZWZhdWx0OnByb21ldGhldXMifQ.bF1Oc9k7F-zv8d6WzUv6mRWhxKKXFTMG9ayO-IN_PiuytGNhqwZ-iz_d8-LghMchgGWX7S7lz0BYm2YS_vkJr2W2pIsCAjCKX0rnLPu8T49yXLtQLLPc31beYm6yDAU447zxVInF6fPEaLZRJOOaF8neH-Qls4gQ55UeL9lYcPpOaJj8LUAAOaR6lBl3YLHb_Dona-45Gfv-HkUTbfsA3vlnBt1GAmglPTA5BnpD_35aWkiHAbnaEfMv0ZcyQtxCp3fjCbHBAuKDb-5JgeZPt4ANmryXgoML-yX1c-1xKSS1DUOewrvh-jCK9W5ac6ENvxAqA4XM2fvlPLKR417Y0A
      relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoints_name]
        action: keep
        regex: karmada-system;karmada-aggregated-apiserver;karmada-aggregated-apiserver
      - target_label: __address__       # cluster内部可以通过该域名访问连接到service=>apiserver
        replacement: karmada-aggregated-apiserver.karmada-system.svc:443

    # - job_name: 'kubernetes-AA'
    #   scheme: https
    #   tls_config:
    #     ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    #     insecure_skip_verify: true
    #   bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    #   # bearer_token: eyJhbGciOiJSUzI1NiIsImtpZCI6IndPZkJmOHlhT1BWNlcyajIwQmdrLVVINXZxQnhyUkNSQm9zcEQ0SjlRejgifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJkZWZhdWx0Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6InByb21ldGhldXMiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoicHJvbWV0aGV1cyIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjBiZWYxY2QwLThiMGEtNDI5ZS1hNjgwLWI4ODk2M2QxZDhjMyIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDpkZWZhdWx0OnByb21ldGhldXMifQ.bF1Oc9k7F-zv8d6WzUv6mRWhxKKXFTMG9ayO-IN_PiuytGNhqwZ-iz_d8-LghMchgGWX7S7lz0BYm2YS_vkJr2W2pIsCAjCKX0rnLPu8T49yXLtQLLPc31beYm6yDAU447zxVInF6fPEaLZRJOOaF8neH-Qls4gQ55UeL9lYcPpOaJj8LUAAOaR6lBl3YLHb_Dona-45Gfv-HkUTbfsA3vlnBt1GAmglPTA5BnpD_35aWkiHAbnaEfMv0ZcyQtxCp3fjCbHBAuKDb-5JgeZPt4ANmryXgoML-yX1c-1xKSS1DUOewrvh-jCK9W5ac6ENvxAqA4XM2fvlPLKR417Y0A
    #   kubernetes_sd_configs:
    #   - role: service
    #   relabel_configs:
    #   - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_service_label_app]
    #     action: keep
    #     regex: karmada-system;karmada-aggregated-apiserver;karmada-aggregated-apiserver
  
    - job_name: 'kubernetes-cadvisor'
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      kubernetes_sd_configs:
      - role: node
      relabel_configs:
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      metric_relabel_configs:
      - action: replace
        source_labels: [id]
        regex: '^/machine\.slice/machine-rkt\\x2d([^\\]+)\\.+/([^/]+)\.service$'
        target_label: rkt_container_name
        replacement: '${2}-${1}'
      - action: replace
        source_labels: [id]
        regex: '^/system\.slice/(.+)\.service$'
        target_label: systemd_service_name
        replacement: '${1}'
      - source_labels: [pod]
        separator: ;
        regex: (.+)
        target_label: pod_name
        replacement: $1
        action: replace
    
    rule_files:
    - "/etc/prometheus/prometheus-rules.yml"

kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: default
# 参考:https://yunlzheng.gitbook.io/prometheus-book/part-iii-prometheus-shi-zhan/readmd/use-prometheus-monitor-kubernetes